package clientrailway;

// Import packages
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
public class PassengerDetailsForm extends javax.swing.JFrame {

    String AC1, AC2, AC3, SL, from1, to1, no, type, seat1, name, arrtime, deptime,text;
    java.time.format.DateTimeFormatter formatter = java.time.format.DateTimeFormatter.ofPattern("dd/MM/yyyy");
java.time.LocalDate textFieldAsDate;
java.sql.Date sqlDate;
    
static String PassName11;
     

    public PassengerDetailsForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtTrainNumber = new javax.swing.JTextField();
        txtFrom = new javax.swing.JTextField();
        txtTo = new javax.swing.JTextField();
        txtPassengerName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        btnBookTicket = new javax.swing.JButton();
        btnResetForm = new javax.swing.JButton();
        cmbSeat = new javax.swing.JComboBox<>();
        txtGender = new javax.swing.JComboBox<>();
        btnBack = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        date_of_journey = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName(""); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("PASSENGER DETAILS");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 51));
        jLabel2.setText("Train Number");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 51));
        jLabel4.setText("From");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 51));
        jLabel5.setText("To");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 51));
        jLabel7.setText("Seat Type");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 51));
        jLabel8.setText("Name");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 51));
        jLabel9.setText("Gender");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 0, 51));
        jLabel10.setText("Age");

        txtTrainNumber.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtTrainNumber.setForeground(new java.awt.Color(0, 153, 153));
        txtTrainNumber.setName(""); // NOI18N
        txtTrainNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTrainNumberKeyTyped(evt);
            }
        });

        txtFrom.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtFrom.setForeground(new java.awt.Color(0, 153, 153));
        txtFrom.setName(""); // NOI18N

        txtTo.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtTo.setForeground(new java.awt.Color(0, 153, 153));
        txtTo.setName(""); // NOI18N

        txtPassengerName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPassengerName.setForeground(new java.awt.Color(0, 153, 153));
        txtPassengerName.setName(""); // NOI18N

        txtAge.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtAge.setForeground(new java.awt.Color(0, 153, 153));
        txtAge.setToolTipText("");
        txtAge.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtAge.setInheritsPopupMenu(true);
        txtAge.setName(""); // NOI18N
        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAgeKeyTyped(evt);
            }
        });

        btnBookTicket.setBackground(new java.awt.Color(0, 255, 255));
        btnBookTicket.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBookTicket.setForeground(new java.awt.Color(153, 0, 153));
        btnBookTicket.setText("Book Ticket");
        btnBookTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookTicketActionPerformed(evt);
            }
        });

        btnResetForm.setBackground(new java.awt.Color(0, 255, 255));
        btnResetForm.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnResetForm.setForeground(new java.awt.Color(153, 0, 153));
        btnResetForm.setText("Reset Form");
        btnResetForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetFormActionPerformed(evt);
            }
        });

        cmbSeat.setBackground(new java.awt.Color(102, 255, 255));
        cmbSeat.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cmbSeat.setForeground(new java.awt.Color(153, 0, 153));
        cmbSeat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC1", "AC2", "AC3", "SL" }));

        txtGender.setBackground(new java.awt.Color(102, 255, 255));
        txtGender.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtGender.setForeground(new java.awt.Color(153, 0, 153));
        txtGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));

        btnBack.setBackground(new java.awt.Color(51, 255, 255));
        btnBack.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnBack.setForeground(new java.awt.Color(153, 0, 153));
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Date of Journey");

        date_of_journey.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        date_of_journey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                date_of_journeyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTrainNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(488, 707, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(156, 156, 156)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(87, 87, 87)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtPassengerName, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(87, 87, 87)
                                        .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(102, 102, 102)
                                        .addComponent(jLabel3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(72, 72, 72)
                                        .addComponent(date_of_journey, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addComponent(btnBookTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(btnResetForm, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnBack)
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTrainNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14)
                .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPassengerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(date_of_journey, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBookTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnResetForm, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetFormActionPerformed
        txtFrom.setText("");
        txtTrainNumber.setText("");
        txtTo.setText("");
        txtPassengerName.setText("");
        txtAge.setText("");
        
    }//GEN-LAST:event_btnResetFormActionPerformed
    // Action buttons
    private void btnBookTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookTicketActionPerformed
        int flag = -1;int total_seats=0;
        String selected_type="";
        String from = txtFrom.getText();
        String to = txtTo.getText();
        String trno = txtTrainNumber.getText();
        String seat = (String) cmbSeat.getSelectedItem();
        String gender = (String) txtGender.getSelectedItem();
        PassName11 = txtPassengerName.getText();
        // Exception handling
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3336/Passenger", "root", "Harsh@2000"); Statement statement = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE)) {

                String query = "SELECT * FROM train WHERE StationFrom='" + from + "' AND StationTo= '" + to + "' AND train_no = '" + trno + "'";
                try (ResultSet result = statement.executeQuery(query)) {
                    while (result.next()) {
                        
                        from1 = result.getString("StationFrom");
                        to1 = result.getString("StationTo");
                        no = result.getString("train_no");
                        name = result.getString("NameOfTrain");

                        type = result.getString("TrainType"); 
                        arrtime = result.getString("ArrTime");
                        deptime = result.getString("DepTime");
                         text = date_of_journey.getText();
                         try{
                         textFieldAsDate = java.time.LocalDate.parse(text, formatter);
                         }
                         catch(Exception e)
                         {
                          JOptionPane.showMessageDialog(this, "Invalid Date! Please enter the date in DD/MM/YYYY format!");  
                          System.out.println(e);
                         }
                         
                         sqlDate= java.sql.Date.valueOf(textFieldAsDate);
                        switch (seat) {
                            case "AC1":
                                seat1 = result.getString("AC1Fare");
                                total_seats=result.getInt("AC1Seat");
                                break;
                            case "AC2":
                                seat1 = result.getString("AC2Fare");
                                total_seats=result.getInt("AC2Seat");
                                break;
                            case "AC3":
                                seat1 = result.getString("AC3Fare");
                                total_seats=result.getInt("AC3Seat");
                                break;
                            case "SL":
                                seat1 = result.getString("SLFare");
                                total_seats=result.getInt("SLSeat");
                                break;
                            default:
                                break;
                        }

                        if (from.equals(from1) && to.equals(to1) && trno.equals(no)) {
                            flag = 0;
                            break;
                        }
                    }

                    if (flag != 0) {
                        JOptionPane.showMessageDialog(this, "This train not found!!, Please enter other train!!");
                    } else {
                        try (Statement statement1 = conn.createStatement()) {
                          /*********************************************************************************/
                          
                            if(type.equals("Holiday Special")) // only for Holiday Special Trains!
                            {
                                // DYNAMIC Pricing for Special Trains
                           String query_special = "SELECT * FROM vacantSeat WHERE train_no='" + trno + "' AND bookingForDate= '" + sqlDate + "'";
                                 
                         try (ResultSet result_special = statement.executeQuery(query_special)) 
                         {  result_special.next();
                             int seat_vacant=0;
                             switch(seat)
                             {
                                 case "AC1":
                                seat_vacant = result_special.getInt("ac1");
                                selected_type="ac1";
                                break;
                            case "AC2":
                                seat_vacant = result_special.getInt("ac2");
                                selected_type="ac2";
                                break;
                            case "AC3":
                                seat_vacant = result_special.getInt("ac3");
                                selected_type="ac3";
                                break;
                            case "SL":
                                seat_vacant = result_special.getInt("sleeper");
                                selected_type="sleeper";
                                break;
                            default:
                                break;
                             }
                             int base_fare=Integer.parseInt(seat1);
                                 int max_fare=2*base_fare;
                                 int cur_fare=base_fare;
                                 if(seat_vacant==0)
                                 {
                                     JOptionPane.showMessageDialog(this, "There are no vacant seats of the required type! Please enter other preferences!");
                                     
                                 }
                                 
                                 else if(seat_vacant<total_seats/2)
                            {
                                 
                                 try{
                                     
                                     // Calculating Slope and intercept on Y-axis for the equation.
                                     
                                 cur_fare=(base_fare-max_fare)/((Math.max(1,total_seats/2)));
                                 cur_fare=(cur_fare*seat_vacant);
                                 cur_fare+=max_fare;
                                 
                                 }catch(ArithmeticException e)
                                 {
                                     System.out.println(e);
                                 }
                             }
                             seat1=String.valueOf(cur_fare);
                             
                             // decrease the count of vacant seat of the respective type by 1.
                             
                            query_special = "UPDATE vacantSeat SET "+ selected_type +" = ? WHERE train_no = ? AND bookingForDate = ?";
                            PreparedStatement preparedStmt = conn.prepareStatement(query_special);
                            preparedStmt.setInt   (1, seat_vacant-1);      
                            preparedStmt.setString(2, no);
                            preparedStmt.setDate(3, sqlDate);
                            preparedStmt.executeUpdate();
                            
                         }catch(Exception e)
                         {
                            System.out.println(e);
                         }
                            }
                            
                            String query1 = "INSERT into passrecord(Username, pName, pGender, pAge, pAction, StationFrom, StationTo, train_no, TrainType, SeatFare, trainName,ArrTime,DeptTime,DateOfJourney) VALUES('" + Login.loggedInUser + "','" + txtPassengerName.getText() + "','" + gender + "','" + txtAge.getText() + "','" + seat + "','" + from1 + "','" + to1 + "', '" + no + "','" + type + "', '" + seat1 + "','" + name + "', '" + arrtime + "','" + deptime + "','" + sqlDate + "');";
                            statement1.executeUpdate(query1);
                            Ticket al;
                            al = new Ticket();
                            al.setVisible(true);
                            this.setVisible(false);
                        }
                    }
                }
            }
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            System.out.println(e);
        }

    }//GEN-LAST:event_btnBookTicketActionPerformed

    private void txtTrainNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTrainNumberKeyTyped
        char ch = evt.getKeyChar();
        if (!(Character.isDigit(ch) || (ch == KeyEvent.VK_BACK_SPACE) || ch == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtTrainNumberKeyTyped

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
//        AdminPage pdf = new AdminPage();
//        pdf.setVisible(true);
TrainBetweenStation tbs=new TrainBetweenStation();
tbs.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtAgeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyTyped
        char ch = evt.getKeyChar();
        if (!(Character.isDigit(ch) || (ch == KeyEvent.VK_BACK_SPACE) || ch == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtAgeKeyTyped

    private void date_of_journeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_date_of_journeyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_date_of_journeyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBookTicket;
    private javax.swing.JButton btnResetForm;
    private javax.swing.JComboBox<String> cmbSeat;
    private javax.swing.JTextField date_of_journey;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtFrom;
    private javax.swing.JComboBox<String> txtGender;
    private javax.swing.JTextField txtPassengerName;
    private javax.swing.JTextField txtTo;
    private javax.swing.JTextField txtTrainNumber;
    // End of variables declaration//GEN-END:variables
}
